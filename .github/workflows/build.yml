name: Build

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight (00:00 UTC)
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  issues:
    types: [opened, edited]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Step to download the BuildTools.jar file
      - name: Download BuildTools.jar
        run: curl -o BuildTools.jar https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar

      - uses: actions/setup-java@v1
        with:
          java-version: 21

      - name: Determine Version
        id: determine_version
        run: |
          # Check if the event is triggered by an issue
          if [ "${{ github.event_name }}" == "issues" ]; then
            # Attempt to extract the build version from the issue body
            VERSION=$(echo "${{ github.event.issue.body }}" | grep -oP '(?<=id: build-version\n\s{2}value: )\S+' || echo "")
            # Check if VERSION is empty and set to 'latest' if necessary
            if [ -z "$VERSION" ]; then
              echo "VERSION=latest" >> $GITHUB_ENV
            else
              echo "VERSION=$VERSION" >> $GITHUB_ENV
            fi
          else
            # Set VERSION to 'latest' for non-issue events
            echo "VERSION=latest" >> $GITHUB_ENV
          fi

      - name: Run with Java
        run: java -jar BuildTools.jar --rev ${{ env.VERSION }}

  upload-artifacts:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      
      # Download build artifacts from previous job
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Spigot Artifacts
          path: ./*.jar

  upload-release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name != 'issues' }}
    steps:
      - uses: actions/checkout@v2

      # Download build artifacts from previous job
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'v1.0.${{ github.run_number }}'
          release_name: 'Release v1.0.${{ github.run_number }}'
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./*.jar
          asset_name: 'BuildTools-v1.0-${{ github.run_number }}.jar'
          asset_content_type: application/java-archive

  close-issue:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'issues' }}
    steps:
      - name: Close Issue
        uses: peter-evans/close-issue@v3
        with:
          issue-number: ${{ github.event.issue.number }}
