name: Build

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight (00:00 UTC)
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Download BuildTools.jar
        # Download the latest BuildTools.jar
        run: curl -o BuildTools.jar https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar

      - uses: actions/setup-java@v1
        with:
          java-version: 21

      - name: Build and Upload Artifacts for Each Version
        # Build each specified version and upload artifacts immediately
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          versions="latest 1.20.4 1.20.3 1.20.2 1.20.1 1.19.4 1.19.3 1.19.2 1.19.1 1.19 1.18.2 1.18.1 1.18 1.17.1 1.17 1.16.5 1.16.4 1.16.3 1.16.2 1.16.1 1.15.2 1.15.1 1.15 1.14.4 1.14.3 1.14.2 1.14.1 1.14 1.13.2 1.13.1 1.13 1.12.2 1.12.1 1.12 1.11.2 1.11.1 1.11 1.10.2 1.9.4 1.9.2 1.9 1.8.8 1.8.3 1.8"

          # Iterate over each version, build it and upload the artifact
          for version in $versions; do
            echo "Building version $version"
            java -jar BuildTools.jar --rev $version
            
            # Find the generated spigot jar
            spigot_file=$(find . -name "spigot-$version*.jar" -print -quit)

            if [[ -f "$spigot_file" ]]; then
              echo "Found $spigot_file, preparing to upload"
              
              # Create a release (or find existing)
              response=$(curl -s -X GET -H "Authorization: token $GITHUB_TOKEN" \
                "https://api.github.com/repos/${{ github.repository }}/releases/tags/latest")
              
              release_id=$(echo "$response" | jq -r '.id')

              if [ "$release_id" = "null" ]; then
                response=$(curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
                  -H "Content-Type: application/json" \
                  -d '{"tag_name": "latest", "name": "Latest Build", "body": "Build artifacts for the latest release"}' \
                  "https://api.github.com/repos/${{ github.repository }}/releases")
                
                release_id=$(echo "$response" | jq -r '.id')
              fi

              echo "Uploading $spigot_file to release $release_id"
              
              curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
                -H "Content-Type: application/zip" \
                --data-binary "@$spigot_file" \
                "https://uploads.github.com/repos/${{ github.repository }}/releases/$release_id/assets?name=$(basename $spigot_file)"
            else
              echo "No spigot jar found for version $version"
            fi
          done
